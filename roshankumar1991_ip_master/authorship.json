[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"# command.Duke project template","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"roshankumar1991"},"content":"3. After that, locate the `src/main/java/command.Duke.java` file, right-click it, and choose `Run command.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"roshankumar1991":2}},{"path":"src/main/java/command/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"package command;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"roshankumar1991"},"content":"import java.util.Scanner;","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"roshankumar1991"},"content":"import java.util.Arrays;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"roshankumar1991"},"content":"import task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":6,"author":{"gitId":"roshankumar1991"},"content":"import task.Todo;","lastModifiedDate":"2022-09-09"},{"lineNumber":7,"author":{"gitId":"roshankumar1991"},"content":"import task.Deadline;","lastModifiedDate":"2022-09-09"},{"lineNumber":8,"author":{"gitId":"roshankumar1991"},"content":"import task.Event;","lastModifiedDate":"2022-09-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"roshankumar1991"},"content":"    public static int count \u003d 0;","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"roshankumar1991"},"content":"    public static int seq \u003d 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"roshankumar1991"},"content":"    public static Task[] list \u003d new Task[100];","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"roshankumar1991"},"content":"    public static void sort(String t) throws DukeException { //classify tasks between todo / deadline / event","lastModifiedDate":"2022-08-28"},{"lineNumber":15,"author":{"gitId":"roshankumar1991"},"content":"        if (t.contains(\"todo\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":16,"author":{"gitId":"roshankumar1991"},"content":"            if (t.trim().length() \u003c 5) {","lastModifiedDate":"2022-08-28"},{"lineNumber":17,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Description of task cannot be empty.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":18,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":19,"author":{"gitId":"roshankumar1991"},"content":"            String description \u003d t.substring(5);","lastModifiedDate":"2022-08-19"},{"lineNumber":20,"author":{"gitId":"roshankumar1991"},"content":"            Task[] print \u003d Arrays.copyOf(list,count);","lastModifiedDate":"2022-08-28"},{"lineNumber":21,"author":{"gitId":"roshankumar1991"},"content":"            for (Task p : print) {","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"roshankumar1991"},"content":"                if (p.description.equals(description)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"roshankumar1991"},"content":"                    throw new DukeException(\"Error: task.Task has already been added previously\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":24,"author":{"gitId":"roshankumar1991"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":25,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":26,"author":{"gitId":"roshankumar1991"},"content":"            list[count] \u003d new Todo(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":27,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":28,"author":{"gitId":"roshankumar1991"},"content":"        else if (t.contains(\"deadline\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":29,"author":{"gitId":"roshankumar1991"},"content":"            if (t.trim().length() \u003c 9) {","lastModifiedDate":"2022-08-28"},{"lineNumber":30,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Description of task cannot be empty.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":31,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":32,"author":{"gitId":"roshankumar1991"},"content":"            if (!t.contains(\"/\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":33,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Please specify time.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":34,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":35,"author":{"gitId":"roshankumar1991"},"content":"            int n \u003d t.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-08-19"},{"lineNumber":36,"author":{"gitId":"roshankumar1991"},"content":"            String description \u003d t.substring(9, n-1);","lastModifiedDate":"2022-08-19"},{"lineNumber":37,"author":{"gitId":"roshankumar1991"},"content":"            String by \u003d t.substring(n+4);","lastModifiedDate":"2022-08-19"},{"lineNumber":38,"author":{"gitId":"roshankumar1991"},"content":"            Task[] print \u003d Arrays.copyOf(list,count);","lastModifiedDate":"2022-08-28"},{"lineNumber":39,"author":{"gitId":"roshankumar1991"},"content":"            for (Task p : print) {","lastModifiedDate":"2022-08-19"},{"lineNumber":40,"author":{"gitId":"roshankumar1991"},"content":"                if (p.description.equals(description)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":41,"author":{"gitId":"roshankumar1991"},"content":"                    throw new DukeException(\"Error: task.Task has already been added previously\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":42,"author":{"gitId":"roshankumar1991"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":43,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":44,"author":{"gitId":"roshankumar1991"},"content":"            list[count] \u003d new Deadline(description, by);","lastModifiedDate":"2022-08-19"},{"lineNumber":45,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":46,"author":{"gitId":"roshankumar1991"},"content":"        else if (t.contains(\"event\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":47,"author":{"gitId":"roshankumar1991"},"content":"            if (t.trim().length() \u003c 6) {","lastModifiedDate":"2022-08-28"},{"lineNumber":48,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Description of task cannot be empty.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":49,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":50,"author":{"gitId":"roshankumar1991"},"content":"            if (!t.contains(\"/\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":51,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Please specify time.\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":52,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":53,"author":{"gitId":"roshankumar1991"},"content":"            int n \u003d t.indexOf(\u0027/\u0027);","lastModifiedDate":"2022-08-19"},{"lineNumber":54,"author":{"gitId":"roshankumar1991"},"content":"            String description \u003d t.substring(6, n-1);","lastModifiedDate":"2022-08-19"},{"lineNumber":55,"author":{"gitId":"roshankumar1991"},"content":"            String at \u003d t.substring(n+4);","lastModifiedDate":"2022-08-19"},{"lineNumber":56,"author":{"gitId":"roshankumar1991"},"content":"            Task[] print \u003d Arrays.copyOf(list,count);","lastModifiedDate":"2022-08-28"},{"lineNumber":57,"author":{"gitId":"roshankumar1991"},"content":"            for (Task p : print) {","lastModifiedDate":"2022-08-19"},{"lineNumber":58,"author":{"gitId":"roshankumar1991"},"content":"                if (p.description.equals(description)) {","lastModifiedDate":"2022-08-19"},{"lineNumber":59,"author":{"gitId":"roshankumar1991"},"content":"                    throw new DukeException(\"Error: task.Task has already been added previously\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":60,"author":{"gitId":"roshankumar1991"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":61,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":62,"author":{"gitId":"roshankumar1991"},"content":"            list[count] \u003d new Event(description, at);","lastModifiedDate":"2022-08-19"},{"lineNumber":63,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":64,"author":{"gitId":"roshankumar1991"},"content":"        else {","lastModifiedDate":"2022-08-28"},{"lineNumber":65,"author":{"gitId":"roshankumar1991"},"content":"            throw new DukeException(\"Error: task.Task specified must be within the category of \u0027todo\u0027 / \u0027event\u0027 / \u0027deadline\u0027 only \\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":66,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":67,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":68,"author":{"gitId":"roshankumar1991"},"content":"    public static void echo() throws DukeException { //classify commands such as bye / list / unmark / mark / add tasks","lastModifiedDate":"2022-08-28"},{"lineNumber":69,"author":{"gitId":"roshankumar1991"},"content":"        String line;","lastModifiedDate":"2022-08-19"},{"lineNumber":70,"author":{"gitId":"roshankumar1991"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2022-08-19"},{"lineNumber":71,"author":{"gitId":"roshankumar1991"},"content":"        line \u003d in.nextLine();","lastModifiedDate":"2022-08-19"},{"lineNumber":72,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":73,"author":{"gitId":"roshankumar1991"},"content":"        if (line.equals(\"bye\")) {                                                //Switch Case - Bye","lastModifiedDate":"2022-08-28"},{"lineNumber":74,"author":{"gitId":"roshankumar1991"},"content":"            System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2022-08-19"},{"lineNumber":75,"author":{"gitId":"roshankumar1991"},"content":"            System.exit(0);","lastModifiedDate":"2022-08-19"},{"lineNumber":76,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":77,"author":{"gitId":"roshankumar1991"},"content":"        else if (line.equals(\"list\")) {                                          //Switch Case - List","lastModifiedDate":"2022-08-28"},{"lineNumber":78,"author":{"gitId":"roshankumar1991"},"content":"                System.out.println(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":79,"author":{"gitId":"roshankumar1991"},"content":"                Task[] print \u003d Arrays.copyOf(list,count);","lastModifiedDate":"2022-08-19"},{"lineNumber":80,"author":{"gitId":"roshankumar1991"},"content":"                for (Task p : print) {","lastModifiedDate":"2022-08-19"},{"lineNumber":81,"author":{"gitId":"roshankumar1991"},"content":"                    System.out.println(seq + \". \" + p);","lastModifiedDate":"2022-08-19"},{"lineNumber":82,"author":{"gitId":"roshankumar1991"},"content":"                    seq++;","lastModifiedDate":"2022-08-19"},{"lineNumber":83,"author":{"gitId":"roshankumar1991"},"content":"                }","lastModifiedDate":"2022-08-19"},{"lineNumber":84,"author":{"gitId":"roshankumar1991"},"content":"                System.out.println(\"\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":85,"author":{"gitId":"roshankumar1991"},"content":"                seq \u003d 1;","lastModifiedDate":"2022-08-19"},{"lineNumber":86,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":87,"author":{"gitId":"roshankumar1991"},"content":"        else if (line.contains(\"unmark\")) {                                      //Switch Case - Unmark","lastModifiedDate":"2022-08-28"},{"lineNumber":88,"author":{"gitId":"roshankumar1991"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":89,"author":{"gitId":"roshankumar1991"},"content":"            if (words.length \u003c 2 || words[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":90,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Please enter which task to unmark\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":91,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":92,"author":{"gitId":"roshankumar1991"},"content":"            int n \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-19"},{"lineNumber":93,"author":{"gitId":"roshankumar1991"},"content":"            if (n \u003e count) throw new DukeException(\"Error: Please enter a valid task number\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":94,"author":{"gitId":"roshankumar1991"},"content":"            if (list[n-1].getStatusIcon().equals(\" \")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":95,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: task.Task has already been unmarked\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":96,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":97,"author":{"gitId":"roshankumar1991"},"content":"            else {","lastModifiedDate":"2022-08-19"},{"lineNumber":98,"author":{"gitId":"roshankumar1991"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":99,"author":{"gitId":"roshankumar1991"},"content":"                list[n-1].setStatus(false);","lastModifiedDate":"2022-08-19"},{"lineNumber":100,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":101,"author":{"gitId":"roshankumar1991"},"content":"            System.out.println(list[n-1] + \"\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":102,"author":{"gitId":"roshankumar1991"},"content":"            echo();","lastModifiedDate":"2022-08-19"},{"lineNumber":103,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":104,"author":{"gitId":"roshankumar1991"},"content":"        else if (line.contains(\"mark\")) {                                       //Switch Case - Mark","lastModifiedDate":"2022-08-28"},{"lineNumber":105,"author":{"gitId":"roshankumar1991"},"content":"            String[] words \u003d line.split(\" \");","lastModifiedDate":"2022-08-19"},{"lineNumber":106,"author":{"gitId":"roshankumar1991"},"content":"            if (words.length \u003c 2 || words[1].trim().equals(\"\")) {","lastModifiedDate":"2022-08-28"},{"lineNumber":107,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Please enter which task is done\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":108,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":109,"author":{"gitId":"roshankumar1991"},"content":"            int n \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2022-08-19"},{"lineNumber":110,"author":{"gitId":"roshankumar1991"},"content":"            if (n \u003e count) {","lastModifiedDate":"2022-08-19"},{"lineNumber":111,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: Please enter a valid task number\\n\");","lastModifiedDate":"2022-08-28"},{"lineNumber":112,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":113,"author":{"gitId":"roshankumar1991"},"content":"            if (list[n-1].getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2022-08-19"},{"lineNumber":114,"author":{"gitId":"roshankumar1991"},"content":"                throw new DukeException(\"Error: task.Task has already been marked\\n\");","lastModifiedDate":"2022-09-09"},{"lineNumber":115,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":116,"author":{"gitId":"roshankumar1991"},"content":"            else {","lastModifiedDate":"2022-08-19"},{"lineNumber":117,"author":{"gitId":"roshankumar1991"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":118,"author":{"gitId":"roshankumar1991"},"content":"                list[n-1].setStatus(true);","lastModifiedDate":"2022-08-19"},{"lineNumber":119,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-19"},{"lineNumber":120,"author":{"gitId":"roshankumar1991"},"content":"            System.out.println(list[n-1] + \"\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":121,"author":{"gitId":"roshankumar1991"},"content":"            echo();","lastModifiedDate":"2022-08-19"},{"lineNumber":122,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":123,"author":{"gitId":"roshankumar1991"},"content":"        else {                                                                  //Switch Case - Add task","lastModifiedDate":"2022-08-28"},{"lineNumber":124,"author":{"gitId":"roshankumar1991"},"content":"            sort(line);","lastModifiedDate":"2022-08-19"},{"lineNumber":125,"author":{"gitId":"roshankumar1991"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2022-08-19"},{"lineNumber":126,"author":{"gitId":"roshankumar1991"},"content":"            System.out.println(list[count]);","lastModifiedDate":"2022-08-19"},{"lineNumber":127,"author":{"gitId":"roshankumar1991"},"content":"            count++;","lastModifiedDate":"2022-08-19"},{"lineNumber":128,"author":{"gitId":"roshankumar1991"},"content":"            System.out.println(\"Now you have \" + count + \" tasks in the list.\\n\");","lastModifiedDate":"2022-08-19"},{"lineNumber":129,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-19"},{"lineNumber":130,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":131,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":132,"author":{"gitId":"roshankumar1991"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2022-08-28"},{"lineNumber":133,"author":{"gitId":"roshankumar1991"},"content":"        String greet \u003d \"Hello! I\u0027m command.Duke\\n\" + \"What can I do for you?\\n\";","lastModifiedDate":"2022-09-09"},{"lineNumber":134,"author":{"gitId":"roshankumar1991"},"content":"        System.out.println(greet);","lastModifiedDate":"2022-08-19"},{"lineNumber":135,"author":{"gitId":"roshankumar1991"},"content":"        while(true) {","lastModifiedDate":"2022-08-28"},{"lineNumber":136,"author":{"gitId":"roshankumar1991"},"content":"            try {","lastModifiedDate":"2022-08-28"},{"lineNumber":137,"author":{"gitId":"roshankumar1991"},"content":"                echo(); //push into recursive loop echo()","lastModifiedDate":"2022-08-28"},{"lineNumber":138,"author":{"gitId":"roshankumar1991"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2022-08-28"},{"lineNumber":139,"author":{"gitId":"roshankumar1991"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2022-08-28"},{"lineNumber":140,"author":{"gitId":"roshankumar1991"},"content":"            }","lastModifiedDate":"2022-08-28"},{"lineNumber":141,"author":{"gitId":"roshankumar1991"},"content":"        }","lastModifiedDate":"2022-08-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"-":3,"roshankumar1991":140}},{"path":"src/main/java/command/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"package command;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"roshankumar1991"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2022-08-28"},{"lineNumber":4,"author":{"gitId":"roshankumar1991"},"content":"    public DukeException(String message) {","lastModifiedDate":"2022-08-28"},{"lineNumber":5,"author":{"gitId":"roshankumar1991"},"content":"        super(message);","lastModifiedDate":"2022-08-28"},{"lineNumber":6,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-28"},{"lineNumber":7,"author":{"gitId":"roshankumar1991"},"content":"}","lastModifiedDate":"2022-08-28"}],"authorContributionMap":{"roshankumar1991":7}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"roshankumar1991"},"content":"public class Deadline extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"roshankumar1991"},"content":"    protected String by;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"roshankumar1991"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"roshankumar1991"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"roshankumar1991"},"content":"        this.by \u003d by;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"roshankumar1991"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"roshankumar1991"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"roshankumar1991"},"content":"        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (by: \" + by + \")\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"roshankumar1991"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"roshankumar1991":16}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"roshankumar1991"},"content":"public class Event extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":4,"author":{"gitId":"roshankumar1991"},"content":"    protected String at;","lastModifiedDate":"2022-08-19"},{"lineNumber":5,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"roshankumar1991"},"content":"    public Event(String description, String at) {","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"roshankumar1991"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"roshankumar1991"},"content":"        this.at \u003d at;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"roshankumar1991"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"roshankumar1991"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"roshankumar1991"},"content":"        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \" (at: \" + at + \")\";","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"roshankumar1991"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"roshankumar1991":15}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"roshankumar1991"},"content":"public abstract class Task {","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"roshankumar1991"},"content":"    public String description;","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"roshankumar1991"},"content":"    protected boolean isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"roshankumar1991"},"content":"    public Task(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"roshankumar1991"},"content":"        this.description \u003d description;","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"roshankumar1991"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"roshankumar1991"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"roshankumar1991"},"content":"        return (isDone ? \"X\" : \" \"); //return X or blank symbols","lastModifiedDate":"2022-08-19"},{"lineNumber":14,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"roshankumar1991"},"content":"    public String getDescription() {","lastModifiedDate":"2022-09-09"},{"lineNumber":17,"author":{"gitId":"roshankumar1991"},"content":"        return description;","lastModifiedDate":"2022-09-09"},{"lineNumber":18,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":20,"author":{"gitId":"roshankumar1991"},"content":"    public void setStatus(boolean isDone) {","lastModifiedDate":"2022-08-19"},{"lineNumber":21,"author":{"gitId":"roshankumar1991"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2022-08-19"},{"lineNumber":22,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":23,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":24,"author":{"gitId":"roshankumar1991"},"content":"    public abstract String toString();","lastModifiedDate":"2022-09-09"},{"lineNumber":25,"author":{"gitId":"roshankumar1991"},"content":"}","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"roshankumar1991":25}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"roshankumar1991"},"content":"package task;","lastModifiedDate":"2022-09-09"},{"lineNumber":2,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":3,"author":{"gitId":"roshankumar1991"},"content":"import task.Task;","lastModifiedDate":"2022-09-09"},{"lineNumber":4,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-09-09"},{"lineNumber":5,"author":{"gitId":"roshankumar1991"},"content":"public class Todo extends Task {","lastModifiedDate":"2022-08-19"},{"lineNumber":6,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":7,"author":{"gitId":"roshankumar1991"},"content":"    public Todo(String description) {","lastModifiedDate":"2022-08-19"},{"lineNumber":8,"author":{"gitId":"roshankumar1991"},"content":"        super(description);","lastModifiedDate":"2022-08-19"},{"lineNumber":9,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":10,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"},{"lineNumber":11,"author":{"gitId":"roshankumar1991"},"content":"    @Override","lastModifiedDate":"2022-08-19"},{"lineNumber":12,"author":{"gitId":"roshankumar1991"},"content":"    public String toString() {","lastModifiedDate":"2022-08-19"},{"lineNumber":13,"author":{"gitId":"roshankumar1991"},"content":"        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + getDescription();","lastModifiedDate":"2022-09-09"},{"lineNumber":14,"author":{"gitId":"roshankumar1991"},"content":"    }","lastModifiedDate":"2022-08-19"},{"lineNumber":15,"author":{"gitId":"roshankumar1991"},"content":"}","lastModifiedDate":"2022-08-19"},{"lineNumber":16,"author":{"gitId":"roshankumar1991"},"content":"","lastModifiedDate":"2022-08-19"}],"authorContributionMap":{"roshankumar1991":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"roshankumar1991"},"content":"java -classpath ..\\bin command.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2022-09-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"roshankumar1991":1}}]
